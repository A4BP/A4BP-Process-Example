<?xml version="1.0" encoding="windows-1252" ?>
<!--Ant buildfile generated by Oracle JDeveloper-->
<!--Generated Sep 18, 2008 12:51:30 PM-->
<project name="OrderApprovalHumanTask" default="all" basedir=".">
  <!-- master build.properties -->
  <property file="../../bin/build.properties"/>
  <property file="build.properties"/>
  
  <property name="webroot.dir" value="../public_html"/>
  <property name="webinf.dir" value="${webroot.dir}/WEB-INF"/>
  <property name="output.dir" value="${webinf.dir}/classes"/>
  <property name="deploy.dir" value="../deploy"/>
  <taskdef name="wldeploy" classname="weblogic.ant.taskdefs.management.WLDeploy" 
            classpath="${oracle.home}/../wlserver_10.3/server/lib/weblogic.jar:${oracle.home}/modules/oracle.jps_11.1.1/jps-common.jar:${oracle.home}/modules/oracle.jps_11.1.1/jps-api.jar:${oracle.home}/modules/oracle.jps_11.1.1/jps-internal.jar"/>
  <property name="wls.url"  value="t3://${admin.server.host}:${admin.server.port}"/>
  <property name="humanTask.dc.dir" value="${oracle.home}/soa/modules/oracle.soa.workflow_11.1.1" />
  
  <!-- check if human task libs are there -->
  <condition property="humanTask.lib.dir" value="${oracle.home}/integration/lib">
    <available file="${oracle.home}/integration/lib/adflibWorklistComponents.jar"/>
  </condition>
  <condition property="humanTask.lib.dir" 
        value="${oracle.home}/soa/modules/oracle.soa.worklist_11.1.1">
    <available file="${oracle.home}/soa/modules/oracle.soa.worklist_11.1.1/adflibWorklistComponents.jar"/>
  </condition>
  <echo>lib dir for task detail specific libs ${humanTask.lib.dir}</echo>

  <target name="init" depends="clean">
    <tstamp/>
    <mkdir dir="${output.dir}"/>
  </target>
  <target name="all" description="Build the project"
          depends="compile,copy"/>
  <target name="clean" description="Clean the project">
    <delete includeemptydirs="true" quiet="true">
      <fileset dir="${output.dir}" includes="*/**"/>
      <fileset dir="${webinf.dir}/lib" includes="**/*"/>
    </delete>
    <delete file="${deploy.dir}/${war.name}.war"/>
    <delete file="${deploy.dir}/${war.name}.ear"/>
  </target>
  <target name="compile" description="Compile Java source files" depends="init">
    <!--javac destdir="${output.dir}" classpathref="classpath"
           debug="${javac.debug}" 
           encoding="Cp1252" source="1.6"
           target="1.6">
      
      <src path="../services"/>
    </javac-->
  </target>
  <target name="copy" description="Copy files to output directory"
          depends="init" if="humanTask.lib.dir">
    <patternset id="copy.patterns">
      <include name="**/*.gif"/>
      <include name="**/*.jpg"/>
      <include name="**/*.jpeg"/>
      <include name="**/*.png"/>
      <include name="**/*.properties"/>
      <include name="**/*.xml"/>
      <include name="**/*-apf.xml"/>
      <include name="**/*.ejx"/>
      <include name="**/*.xcfg"/>
      <include name="**/*.cpx"/>
      <include name="**/*.dcx"/>
      <include name="**/*.sva"/>
      <include name="**/*.ini"/>
      <include name="**/*.tld"/>
      <include name="**/*.tag"/>
      <include name="**/*.xlf"/>
      <include name="**/*.wsdl"/>
      <include name="**/*.xsd"/>
    </patternset>
    <copy todir="${output.dir}">
      <fileset dir="../adfmsrc">
        <patternset refid="copy.patterns"/>
      </fileset>
      <fileset dir="../adfmsrc" includes="*.*"/>
      <fileset dir="..">
        <include name="services/**"/>
      </fileset>
    </copy>
  </target>

  <target name="create-ear" depends="compile, copy" if="humanTask.lib.dir">
    <mkdir dir="${deploy.dir}"/>
    <property name="tmp.adf.dir" value="${deploy.dir}/adf"/>
    <property name="tmp.adfmeta.dir" value="${tmp.adf.dir}/META-INF"/>
    
    <copy todir="${webinf.dir}/lib">
        <fileset dir="${humanTask.lib.dir}" includes="adflibWorklistComponents.jar"/>
        <fileset dir="${humanTask.dc.dir}" includes="bpm-workflow-datacontrol.jar"/>
        <fileset dir="${oracle.home}/jlib" includes="inspect4.jar"/>
        
        <fileset dir="${oracle.home}/modules/oracle.javatools_11.1.1" includes="resourcebundle.jar"/>
        <fileset dir="${oracle.home}/modules/oracle.bali.share_11.1.1" includes="share.jar"/>
    </copy>
        
    <war basedir="${webroot.dir}" destfile="${deploy.dir}/${war.name}.war"
        webxml="${webinf.dir}/web.xml">
        <include name="*/**"/>
    </war>
    <delete dir="${webinf.dir}/lib" includeemptydirs="true" includes="*/**"/>
    <delete dir="${webinf.dir}/lib"/>
    
    <mkdir dir="${tmp.adfmeta.dir}"/>
    <copy todir="${tmp.adfmeta.dir}">
        <fileset dir="../../.adf/META-INF">
            <include name="*/**"/>
        </fileset>
    </copy>
    
    <echo file="${tmp.adfmeta.dir}/adf-config.xml">&lt;?xml version="1.0" encoding="windows-1252" ?>
        &lt;adf-config xmlns="http://xmlns.oracle.com/adf/config">
          &lt;adf-mds-config xmlns="http://xmlns.oracle.com/adf/mds/config">
            &lt;mds-config xmlns="http://xmlns.oracle.com/mds/config">
              &lt;persistence-config>
                &lt;metadata-namespaces>
                &lt;/metadata-namespaces>
                &lt;metadata-store-usages>
                &lt;/metadata-store-usages>
              &lt;/persistence-config>
            &lt;/mds-config>
          &lt;/adf-mds-config>
        &lt;/adf-config> 
    </echo>
    
    <property name="connections.xml.file" value="${tmp.adfmeta.dir}/connections.xml"/>
    <antcall target="setupDeploymentEnvironment" inheritall="true"/>
    
    <property name="tmp.ear.lib" value="${deploy.dir}/lib"/>
    <mkdir dir="${tmp.ear.lib}"/>

    <copy file="../lib/adf-loc.jar" todir="${tmp.ear.lib}"/>

    <ear basedir="${deploy.dir}" appxml="../../src/META-INF/application.xml"
        destfile="${deploy.dir}/${war.name}.ear">
        <include name="${war.name}.war"/>
        <include name="adf/**"/>
        <include name="lib/*"/>
        <fileset dir="../../src">
            <include name="*/**"/>
            <exclude name="META-INF/application.xml"/>
        </fileset>
    </ear>
    <delete dir="${tmp.adfmeta.dir}" includeemptydirs="true" includes="*/**"/>
    <delete dir="${tmp.adf.dir}" includeemptydirs="true" />
    
    <delete dir="${tmp.ear.lib}" includeemptydirs="true" includes="*/**"/>
    <delete dir="${tmp.ear.lib}"/>
  </target>
  
  <!-- us wldeploy to deploy the thing -->
  <target name="deploy-application" unless="skip.humanTask">
    <wldeploy action="deploy" name="${war.name}" 
      source="${deploy.dir}/${war.name}.ear" library="false"
      nostage="true"
      user="${server.user}" password="${server.password}"
      verbose="false" adminurl="${wls.url}"
      remote="true" upload="true"
      targets="${server.targets}" />
  </target>
  
  <!-- undeploy application -->
  <target name="undeploy-application">
    <wldeploy action="undeploy" name="${war.name}" 
      user="${server.user}" password="${server.password}"
      adminurl="${wls.url}"
      remote="true" targets="${server.targets}" />
  </target>  
  
  <!-- setup of connections.xml -->
  <target name="setupDeploymentEnvironment">
    <property name="master.connection.xml" value="../../.adf/META-INF/connections.xml"/>
    <condition property="connections.xml.file" value="${master.connection.xml}">
        <not>
          <isset property="${connections.xml.file}"/>
        </not>  
    </condition>    
    <!-- backup -->
    <condition property="doBackup">
        <and>
            <not>
                <available file="${master.connection.xml}.orig" property="isThere"/>
            </not>
            <equals casesensitive="false" trim="false" arg1="${connections.xml.file}" arg2="${master.connection.xml}"/>        
        </and>
    </condition>  
    <echo>${doBackup} ${isThere} ${connections.xml.file} ${master.connection.xml}</echo>
    <antcall target="backupOriginalConnectionXML" inheritall="true" />
    
    <echo>Setting up descriptor, soa-only? ${soa.only.deployment}, modifying ${connections.xml.file} </echo>
    <!-- adf deployment -->
    <condition property="storefrontservice.http.endpoint" value="${managed.server.host}:${managed.server.port}">
          <equals arg1="${soa.only.deployment}" arg2="false" />
    </condition>    
    <condition property="storefrontservice.contextUri" value="${storefrontservice.contextUri.adf}">
          <equals arg1="${soa.only.deployment}" arg2="false" />
    </condition>
    <condition property="storefrontservice.ws.binding" value="${storefrontservice.ws.binding.adf}">
          <equals arg1="${soa.only.deployment}" arg2="false" />
    </condition>
    <!-- soa deployment -->
    <condition property="storefrontservice.contextUri" value="${storefrontservice.contextUri.soa}">
          <equals arg1="${soa.only.deployment}" arg2="true" />
    </condition>
    <condition property="storefrontservice.http.endpoint" value="${managed.server.host}:${managed.server.port}">
          <equals arg1="${soa.only.deployment}" arg2="true" />
    </condition>
    <condition property="storefrontservice.ws.binding" value="${storefrontservice.ws.binding.soa}">
          <equals arg1="${soa.only.deployment}" arg2="true" />
    </condition>

    <echo message="replacing ws-endpoint with ${storefrontservice.http.endpoint}/${storefrontservice.contextUri}"/>    
    <replace file="${connections.xml.file}" 
        token="@endpoint@" value="http://${storefrontservice.http.endpoint}/${storefrontservice.contextUri}"/>

    <echo message="replacing ws-binding with ${storefrontservice.ws.binding}"/>    
    <replace file="${connections.xml.file}" 
        token="@binding@" value="${storefrontservice.ws.binding}"/>  
  </target>

  <target name="backupOriginalConnectionXML" if="doBackup">
    <echo>Backing up ../../.adf/META-INF/connections.xml to .orig</echo>  
    <copy file="../../.adf/META-INF/connections.xml" tofile="../../.adf/META-INF/connections.xml.orig" overwrite="true"/>
  </target>

</project>
